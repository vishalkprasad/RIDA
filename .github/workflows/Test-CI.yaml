name: test-CI.yaml

on:
  workflow_run:
    workflows: ['Dev-CI.yaml']
    types: [completed]

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Explicitly set the permissions for GITHUB_TOKEN
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Build with Ant for Test
      run: ant -f build.xml -Djar.name=SecureTomcatJDBC-test.jar -propertyfile build-test.properties jar

    - name: Upload Artifact for Test
      uses: actions/upload-artifact@v4
      with:
        name: securetomcatjdbc-test-jar
        path: dist/SecureTomcatJDBC-test.jar

    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Pull latest changes
      run: git pull origin main

    - name: Commit JAR for Test
      run: |
        mkdir -p testjar
        mv dist/SecureTomcatJDBC-test.jar testjar/
        git add testjar/SecureTomcatJDBC-test.jar
        git commit -m "Add SecureTomcatJDBC-test.jar artifact"
        git push origin main

  push-appspec-test-yml:
    runs-on: ubuntu-latest
    needs: build-test
  
    environment:
      name: Test
      url: https://gdbtest.gilead.com  
    permissions:
      id-token: write
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Copy AppSpec File for test
      run: |
        cp appspec-test.yml appspec.yml
        ls -la  # Verify the file is copied
    - name: Configure Git
      run: |
         git config --global user.name 'github-actions[bot]'
         git config --global user.email 'github-actions[bot]@users.noreply.github.com'
    - name: Pull Latest Changes
      run: |
         git stash
         git pull origin main || true
         git stash pop
         git add appspec.yml
         git commit -m "Update appspec.yml" || echo "No changes to commit"
         git push origin main || true

    - name: Resolve Merge Conflicts
      if: failure()
      run: |
         git merge --strategy-option theirs
         git add appspec.yml
         git commit -m "Resolved merge conflict in appspec.yml"
         git push origin main

    - name: Commit and Push AppSpec File
      run: |
         echo "Listing files before git add..."
         ls -la  # List files to confirm appspec.yml is present
    
         if [ -f appspec.yml ]; then
            echo "# Updated on $(date)" >> appspec.yml  # Append a comment with the current date and time
            git add appspec.yml
            git commit -m "Update appspec.yml file for Dev" || echo "No changes to commit"
            git push origin main
         else
            echo "Error: appspec.yml not found in the root directory."
            exit 1 
         fi
         
    - name: List files
      run: ls -la
  
  deploy-test:
    runs-on: ubuntu-latest
    needs: push-appspec-test-yml
    environment:
      name: Test
      url: https://gdbtst.gilead.com
    permissions:
      id-token: write
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Configure AWS Credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::776543442213:role/RIDA_AWS_OIDC_CODEDEPLOY_ROLE
        aws-region: us-west-2
    - name: Create Code Deploy
      id: deploy-test
      uses: webfactory/create-aws-codedeploy-deployment/create-deployment@v0.5.0
      with:
        application: RIDA_TST
    - name: Retry Deployment on Failure
      if: failure()
      run: |
        echo "Retrying deployment..."
        sleep 30  # Wait for 30 seconds before retrying
        webfactory/create-aws-codedeploy-deployment/create-deployment@v0.5.0
        with:
          application: RIDA_TST
    - name: Print Commit Message
      uses: peter-evans/commit-comment@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        body: >
          @${{ github.actor }} this was deployed as ${{
          steps.deploy-dev.outputs.deploymentId }} to group `${{
          steps.deploy-dev.outputs.deploymentGroupName }}`.
